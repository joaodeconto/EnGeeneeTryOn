body {
  font-family: 'MarkForMCNrw', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: hsla(240, 10%, 4%, 0);
  margin: 0;
}

*,
::before,
::after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
}

.fade-out {
  animation: fadeOut 1.5s forwards;
}

@keyframes fadeOut {
  to {
    opacity: 0;
  }
}

.fade-in {
  animation: fadeIn 1.5s forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: hsl(0, 0%, 100%);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 200000; /* above all other elements */
}

.loading-logo
{
  z-index: 200000; /* above all other elements */
  margin: 10%;
}

.loading-text {
  font-family: 'MarkForMCNrw', sans-serif;
  font-size: 3rem;
  color: hsl(240, 10%, 4%);
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.7);
  z-index: 200001; /* above all other elements */
}

.top-icon {
  position: fixed;      /* fix to viewport */
  top: 13rem;            /* distance from top of screen */
  left: 50%;            /* center horizontally */
  transform: translateX(-50%);
  width: 15rem;        /* adjust to your desired size */
  height: auto;
  z-index: 99999;       /* above other elements */
  pointer-events: none; /* clicks pass through */
}

.top-menu{
  position: absolute;
  top: 5%;
  right: 5%;
  width: auto;
  height: auto;
  z-index: 99999;       /* above other elements */
}
/* container for buttons */
.orientation,
.options-toggle,
.option-btn {
  width: 10rem;
  height: 10rem;
  border-radius: calc(0.5rem);
  color: hsla(0, 0%, 98%, 0);
  opacity: 0.1;
  background-image: url("/shot.svg");
  background-size: contain;
  background-color: hsla(0, 0%, 100%, 0);
  z-index: 1000004 ;
}
.orientation{
  background-image: url("/switch.svg");
}
.orientation:hover,
.options-toggle:hover,
.option-btn:hover {
  opacity: 0.5;
  background-color: hsla(0, 0%, 100%, 0.349);
}

.options-toggle{
  background-image: url("/apparel.svg");
}

.options-menu{
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  background: rgba(0,0,0,0.5);
  padding: 1rem;
  border-radius: 0.5rem;
  z-index: 1000005;
}

.option-row{
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.option-label{
  color: white;
  font-size: 1.2rem;
}

.option-btn.small{
  width: 4rem;
  height: 4rem;
}
.close-btn{
  align-self: flex-end;
}


.welcome-screen,
.instructions-screen {
  /* 33% of viewport width, height = 2/3 of that width */
  width: 33vw;
  aspect-ratio: 3 / 2;

  /* center on screen */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  /* your card as a full‑cover backdrop */
  background: url("/Cards/Instructions_Card_Blue.png") no-repeat center/cover;

  /* flex‑center any text inside */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  /* text styles */
  color: #fff;
  font-family: 'MarkForMCNrw', sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.7);

  /* rounding and shadow */
  border-radius: 0.5rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);

  /* bring it in with fade‑in */
  opacity: 0;
  animation: fadeIn 0.8s ease-out forwards;
  /* or use your existing fade-in */
}

/* fade‑out */
.welcome-screen.fade-out,
.instructions-screen.fade-out {
  animation: fadeOut 0.5s ease-in forwards;
  /* or your existing fade-out */
}

.welcome-screen::before,
.welcome-screen::after {
  white-space: pre-line;

  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  /* allow some breathing room at the sides */
  width: 90%;
  padding: 0 1rem;
  box-sizing: border-box;

  text-align: center;
  font-family: 'MarkForMCNrw', sans-serif;
  font-size: 1.5rem;
  color: #fff;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.7);

  pointer-events: none;
}

.welcome-screen::before {
  content: attr(data-title);
  top: 40%;                 /* tweak vertical positioning */
  color: #F79E1B;           /* your highlight color */
  font-size: 2.3rem;
  font-weight: bold;
}

/* Subtitle */
.welcome-screen::after {
  content: attr(data-subtitle);
  top: 50%;
  color: #FFFFFF;
  font-size: 2rem;
  white-space: pre-line;    /* preserve your line breaks */
}

.ball-loop {
  width: 70%;
  height: 70%;
  object-fit: contain;
  /* center on screen for demo: */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9998;
}

.ring-loop {
  width: 70%;
  height: 70%;
  object-fit: contain;
  /* center on screen for demo: */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9998;
}

.full-screen {
  position: fixed;
  top: 0;
  left: 0;
  height: 100dvh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  pointer-events: none;
}

.video-introduction {
  pointer-events: none;
  position: flex;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100dvh;
  overflow: hidden;
  z-index: 9997;
}

.video-introduction video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100dvh;
  object-fit: cover;
  object-position: top;
  z-index: 9997;
  pointer-events: none;
}

.start-button {
  position: fixed;
  /* Not relative! Matches ball-loop */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 70%;
  height: 70%;
  background: transparent;
  border: none;
  cursor: pointer;
  pointer-events: auto;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
}

.start-button::after {
  content: "PRESS HERE\ATO BEGIN";
  position: absolute;
  top: 55%;
  left: 50%;
  transform: translate(-50%, 0%);
  color: #000000;
  font-family: 'MarkForMCNrw', sans-serif;
  font-size: clamp(24px, 10vw, 72px);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.6);
  pointer-events: none;
  white-space: pre;
  text-align: center;
  line-height: 1.3;
}



/* 1) The clipping frame */
.scanner-frame {
  position: fixed;
  top: 10%;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  height: 80%;
  border: 4px solid rgba(255,255,255,0.8);
  border-radius: 24px;
  
  /* THIS is the magic: clip its children */
  overflow: hidden;

  /* sits above video but under other UI */
  z-index: 1;
  pointer-events: none;
  box-sizing: border-box;
}

.scanner-overlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;
}

/* We’ll use ::before for the “up” sweep and ::after for the “down” sweep */
.scanner-overlay::before,
.scanner-overlay::after {
  content: "";
  position: absolute;
  inset: 0;
  background-repeat: no-repeat;
  background-size: 100% 200%;
  pointer-events: none;
}

/* Up-direction beam (gradient→bottom) */
.scanner-overlay::before {
  background-image: linear-gradient(
    to bottom,
    transparent 40%,
    rgba(0, 238, 255, 0.5) 50%,
    transparent 50.5%
  );
  animation: scan-up 2s ease-in-out infinite;
}

/* Down-direction beam (gradient→top) */
.scanner-overlay::after {
  background-image: linear-gradient(
    to top,
    transparent 40%,
    rgba(0, 238, 255, 0.5) 50%,
    transparent 50.5%
  );
  animation: scan-down 2s ease-in-out infinite;
}

/* Keyframes for the up sweep: 
   - 0%→49.9%: move stripe from bottom to top, visible  
   - 50%→100%: hide it (so the down sweep can take over) */
@keyframes scan-up {
  0%    { background-position: 0 110%; opacity: 1; }
  49.9% { background-position: 0 0%;   opacity: 1; }
  50%   {                opacity: 0; }
  100%  {                opacity: 0; }
}

/* Keyframes for the down sweep:
   - 0%→50%: hidden  
   - 50%→100%: move stripe from top back down, visible */
@keyframes scan-down {
  0%    { background-position: 0 0%;   opacity: 0; }
  50%   { background-position: 0 0%;   opacity: 1; }
  100%  { background-position: 0 110%; opacity: 1; }
}


#background {
  position: relative;
  overflow: hidden;
}
.bg-layer {
  position: absolute;
  top: 0; left: 0; width: 100%; height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.5s;
}
/* initial state: layer1 visible, layer2 transparent */
.layer1 { opacity: 1; }
.layer2 { opacity: 0; }

.loadui {
  z-index: 3;
  padding: 2rem 1rem;
  text-align: center;
  background: rgba(255, 255, 255, 0.85);
  backdrop-filter: blur(10px);
}


h4 {
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
  margin: 0;
}

h2 {
  font-size: 1.875rem;
  line-height: 2.25rem;
  font-weight: 700;
  margin: 0;
}

p {
  font-weight: 700;
  margin: 0;
}

.button {
  width: 2.5rem;
  height: 2.5rem;
  padding: 0.25rem;
  border-radius: calc(0.5rem - 2px);
  color: hsl(0 0 98%);
  background-color: hsl(240 5.9% 10% / 0.4);
}

.button:hover {
  background-color: hsl(240 5.9% 10% / 0.6);
}

input.button[type="checkbox"] {
  appearance: none;
  margin: 0;
}

#size-ui {
  position: absolute;
  align-content: center;
  width: 30rem;
  height: 10rem;
  bottom: 10rem;
  right: 11rem;
  padding: 2rem 2rem;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 10px;
  z-index: 999;
  pointer-events: none;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

#size-text {   
  color: #fff;
  font-family: 'MarkForMCNrw', sans-serif;
  font-weight: lighter;
  font-size: 3rem;
}

.checkbox {
  background-position: center;
  background-size: 2.25rem;
  background-repeat: no-repeat;
}

.icon {
  width: 100%;
  height: 100%;
  color: inherit;
  background-size: contain;
}

#outfit-switch {
  background-image: url("/avatar.svg");
}

#outfit-switch:checked {
  background-image: url("/apparel.svg");
}

.carousel {
  position: absolute;
  width: fit-content;
  height: auto;
  z-index: 2;
  display: flex;
  flex-direction: row;
  /* Changes layout to column */
  align-items: center;
  /* Centers items horizontally */
  gap: 0.5rem;
  /* Adds space between items */
}

.carousel-item {
  height: 10rem;
  width: 10rem;
  margin: auto 4px;
  overflow: hidden;
  border: double 4px #008080;
  border-radius: calc(0.5rem - 2px);
  border-color: hsl(240 10% 3.9% / 0.4);
  background-position: center;
  background-size: contain;
  background-color: hsl(240 5.9% 10% / 0.4);
  background-repeat: no-repeat;
  transition: .6s;
}

.carousel input[type="radio"] {
  background-color: hsl(240 5.9% 10% / 0.4);
  appearance: none;
}

.carousel-item:hover {
  border-color: hsl(0 0 100%);
}

.cube-container {
  width: 168px;
  height: 168px;
  padding: 36px;
  margin: auto;
}

.cube {
  position: absolute;
  width: 96px;
  height: 96px;
  animation: cube 2s infinite ease;
  transform-style: preserve-3d;
}

.cube>div {
  width: 100%;
  height: 100%;
  position: absolute;
  border: 2px solid hsl(240 6% 10%);
  background-color: hsl(240 6% 10% / 30%);
}

.cube div:nth-of-type(1) {
  transform: translateZ(-48px);
}

.cube div:nth-of-type(2) {
  transform: rotateY(-270deg) translateX(50%);
  transform-origin: top right;
}

.cube div:nth-of-type(3) {
  transform: rotateY(270deg) translateX(-50%);
  transform-origin: center left;
}

.cube div:nth-of-type(4) {
  transform: rotateX(90deg) translateY(-50%);
  transform-origin: top center;
}

.cube div:nth-of-type(5) {
  transform: rotateX(-90deg) translateY(50%);
  transform-origin: bottom center;
}

.cube div:nth-of-type(6) {
  transform: translateZ(48px);
}

@keyframes cube {
  0% {
    transform: rotate(45deg) rotateX(-25deg) rotateY(25deg);
  }

  50% {
    transform: rotate(45deg) rotateX(-385deg) rotateY(25deg);
  }

  100% {
    transform: rotate(45deg) rotateX(-385deg) rotateY(385deg);
  }
}

.boxes {
  --size: 48px;
  --duration: 800ms;
  height: calc(2 * var(--size));
  width: calc(3 * var(--size));
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: calc(-1.5 * var(--size));
  transform-style: preserve-3d;
  transform-origin: -25% -25%;
  transform: rotateX(60deg) rotateZ(45deg) rotateY(0deg) translateZ(0px);
}

.boxes .box {
  width: var(--size);
  height: var(--size);
  position: absolute;
  top: 0;
  left: 0;
  transform-style: preserve-3d;
}

.boxes .box>div {
  --top: auto;
  --right: auto;
  --bottom: auto;
  --left: auto;
  --translateZ: calc(0.5 * var(--size));
  --rotateY: 0deg;
  --rotateX: 0deg;
  width: 100%;
  height: 100%;
  position: absolute;
  top: var(--top);
  right: var(--right);
  bottom: var(--bottom);
  left: var(--left);
  transform: rotateY(var(--rotateY)) rotateX(var(--rotateX)) translateZ(var(--translateZ));
  background-color: hsl(240 6% 10% / 0.3);
  border: 1px solid hsl(240 6% 10%);
}

.boxes .box:nth-child(1) {
  transform: translate(100%, 0);
  animation: box1 var(--duration) linear infinite;
}

.boxes .box:nth-child(2) {
  transform: translate(0, 100%);
  animation: box2 var(--duration) linear infinite;
}

.boxes .box:nth-child(3) {
  transform: translate(100%, 100%);
  animation: box3 var(--duration) linear infinite;
}

.boxes .box:nth-child(4) {
  transform: translate(200%, 0);
  animation: box4 var(--duration) linear infinite;
}

.boxes .box>div:nth-child(1) {
  --top: 0;
  --left: 0;
}

.boxes .box>div:nth-child(2) {
  --right: 0;
  --rotateY: 90deg;
}

.boxes .box>div:nth-child(3) {
  --rotateX: -90deg;
}

.boxes .box>div:nth-child(4) {
  --top: 0;
  --left: 0;
  --translateZ: calc(-1.5 * var(--size));
  background-color: hsl(240 6% 10% / 0.1);
  border: 1px solid hsl(240 6% 10% / 0.05);
}

.hidden {
  display: none !important;
}

/* Book (400) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-Book.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

/* Book Italic (400 italic) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-BookIt.ttf') format('truetype');
  font-weight: 400;
  font-style: italic;
  font-display: swap;
}

/* Bold (700) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/* Bold Italic (700 italic) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-BoldIt.ttf') format('truetype');
  font-weight: 700;
  font-style: italic;
  font-display: swap;
}

/* Black (900) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-Black.ttf') format('truetype');
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}

/* Black Italic (900 italic) */
@font-face {
  font-family: 'MarkForMCNrw';
  src: url('/MarkForMCNrw/MarkForMCNrw-BlackIt.ttf') format('truetype');
  font-weight: 900;
  font-style: italic;
  font-display: swap;
}

@keyframes box1 {

  0%,
  50% {
    transform: translate(100%, 0);
  }

  100% {
    transform: translate(200%, 0);
  }
}

@keyframes box2 {
  0% {
    transform: translate(0, 100%);
  }

  50% {
    transform: translate(0, 0);
  }

  100% {
    transform: translate(100%, 0);
  }
}

@keyframes box3 {

  0%,
  50% {
    transform: translate(100%, 100%);
  }

  100% {
    transform: translate(0, 100%);
  }
}

@keyframes box4 {
  0% {
    transform: translate(200%, 0);
  }

  50% {
    transform: translate(200%, 100%);
  }

  100% {
    transform: translate(100%, 100%);
  }
}